{
  "Resources": {
    "HotelApi7FAF7AD2": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "HotelApi"
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Resource"
      }
    },
    "HotelApiCloudWatchRoleEC3371D9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/CloudWatchRole/Resource"
      }
    },
    "HotelApiAccount71BC6E26": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "HotelApiCloudWatchRoleEC3371D9",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "HotelApi7FAF7AD2"
      ],
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Account"
      }
    },
    "HotelApiDeployment9FAFEB26edac95a31583f4a00119961c079e4dea": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "HotelApi7FAF7AD2"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "HotelApihelloGETE0FF261C",
        "HotelApihello990B0804",
        "HotelApihotelsDELETE9F796493",
        "HotelApihotelsGETD753817D",
        "HotelApihotelsPOSTD51FAA37",
        "HotelApihotelsPUT5C26DE6C",
        "HotelApihotels65D3E07F"
      ],
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Deployment/Resource"
      }
    },
    "HotelApiDeploymentStageprodCE44C8C1": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "HotelApi7FAF7AD2"
        },
        "DeploymentId": {
          "Ref": "HotelApiDeployment9FAFEB26edac95a31583f4a00119961c079e4dea"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/DeploymentStage.prod/Resource"
      }
    },
    "HotelApihello990B0804": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "HotelApi7FAF7AD2",
            "RootResourceId"
          ]
        },
        "PathPart": "hello",
        "RestApiId": {
          "Ref": "HotelApi7FAF7AD2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hello/Resource"
      }
    },
    "HotelApihelloGETApiPermissionHotelBookingHotelApi3F54A397GEThelloA4DFF6B9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "helloLambdaNodeJs14E63891",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HotelApi7FAF7AD2"
              },
              "/",
              {
                "Ref": "HotelApiDeploymentStageprodCE44C8C1"
              },
              "/GET/hello"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hello/GET/ApiPermission.HotelBookingHotelApi3F54A397.GET..hello"
      }
    },
    "HotelApihelloGETApiPermissionTestHotelBookingHotelApi3F54A397GEThello8FDA48B8": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "helloLambdaNodeJs14E63891",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HotelApi7FAF7AD2"
              },
              "/test-invoke-stage/GET/hello"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hello/GET/ApiPermission.Test.HotelBookingHotelApi3F54A397.GET..hello"
      }
    },
    "HotelApihelloGETE0FF261C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "HotelApihello990B0804"
        },
        "RestApiId": {
          "Ref": "HotelApi7FAF7AD2"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "UserAuthorizerF623B8DE"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "helloLambdaNodeJs14E63891",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hello/GET/Resource"
      }
    },
    "HotelApihotels65D3E07F": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "HotelApi7FAF7AD2",
            "RootResourceId"
          ]
        },
        "PathPart": "hotels",
        "RestApiId": {
          "Ref": "HotelApi7FAF7AD2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/Resource"
      }
    },
    "HotelApihotelsPOSTApiPermissionHotelBookingHotelApi3F54A397POSThotelsC88FAD72": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hotelsTableCreate1DB71F4A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HotelApi7FAF7AD2"
              },
              "/",
              {
                "Ref": "HotelApiDeploymentStageprodCE44C8C1"
              },
              "/POST/hotels"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/POST/ApiPermission.HotelBookingHotelApi3F54A397.POST..hotels"
      }
    },
    "HotelApihotelsPOSTApiPermissionTestHotelBookingHotelApi3F54A397POSThotels761ACEEF": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hotelsTableCreate1DB71F4A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HotelApi7FAF7AD2"
              },
              "/test-invoke-stage/POST/hotels"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/POST/ApiPermission.Test.HotelBookingHotelApi3F54A397.POST..hotels"
      }
    },
    "HotelApihotelsPOSTD51FAA37": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "HotelApihotels65D3E07F"
        },
        "RestApiId": {
          "Ref": "HotelApi7FAF7AD2"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "hotelsTableCreate1DB71F4A",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/POST/Resource"
      }
    },
    "HotelApihotelsGETApiPermissionHotelBookingHotelApi3F54A397GEThotels99952B68": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hotelsTableRead4582DF29",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HotelApi7FAF7AD2"
              },
              "/",
              {
                "Ref": "HotelApiDeploymentStageprodCE44C8C1"
              },
              "/GET/hotels"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/GET/ApiPermission.HotelBookingHotelApi3F54A397.GET..hotels"
      }
    },
    "HotelApihotelsGETApiPermissionTestHotelBookingHotelApi3F54A397GEThotels74180AB4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hotelsTableRead4582DF29",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HotelApi7FAF7AD2"
              },
              "/test-invoke-stage/GET/hotels"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/GET/ApiPermission.Test.HotelBookingHotelApi3F54A397.GET..hotels"
      }
    },
    "HotelApihotelsGETD753817D": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "HotelApihotels65D3E07F"
        },
        "RestApiId": {
          "Ref": "HotelApi7FAF7AD2"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "hotelsTableRead4582DF29",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/GET/Resource"
      }
    },
    "HotelApihotelsPUTApiPermissionHotelBookingHotelApi3F54A397PUThotels32A33A87": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hotelsTableUpdate422043EF",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HotelApi7FAF7AD2"
              },
              "/",
              {
                "Ref": "HotelApiDeploymentStageprodCE44C8C1"
              },
              "/PUT/hotels"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/PUT/ApiPermission.HotelBookingHotelApi3F54A397.PUT..hotels"
      }
    },
    "HotelApihotelsPUTApiPermissionTestHotelBookingHotelApi3F54A397PUThotels9A57620D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hotelsTableUpdate422043EF",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HotelApi7FAF7AD2"
              },
              "/test-invoke-stage/PUT/hotels"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/PUT/ApiPermission.Test.HotelBookingHotelApi3F54A397.PUT..hotels"
      }
    },
    "HotelApihotelsPUT5C26DE6C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "ResourceId": {
          "Ref": "HotelApihotels65D3E07F"
        },
        "RestApiId": {
          "Ref": "HotelApi7FAF7AD2"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "hotelsTableUpdate422043EF",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/PUT/Resource"
      }
    },
    "HotelApihotelsDELETEApiPermissionHotelBookingHotelApi3F54A397DELETEhotelsC598FEAF": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hotelsTableDeleteF55A7AC8",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HotelApi7FAF7AD2"
              },
              "/",
              {
                "Ref": "HotelApiDeploymentStageprodCE44C8C1"
              },
              "/DELETE/hotels"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/DELETE/ApiPermission.HotelBookingHotelApi3F54A397.DELETE..hotels"
      }
    },
    "HotelApihotelsDELETEApiPermissionTestHotelBookingHotelApi3F54A397DELETEhotels1F9DDE86": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hotelsTableDeleteF55A7AC8",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HotelApi7FAF7AD2"
              },
              "/test-invoke-stage/DELETE/hotels"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/DELETE/ApiPermission.Test.HotelBookingHotelApi3F54A397.DELETE..hotels"
      }
    },
    "HotelApihotelsDELETE9F796493": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "HotelApihotels65D3E07F"
        },
        "RestApiId": {
          "Ref": "HotelApi7FAF7AD2"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "hotelsTableDeleteF55A7AC8",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelApi/Default/hotels/DELETE/Resource"
      }
    },
    "hotelsTableAEA1B8E6": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "hotelId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "hotelId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "location",
            "AttributeType": "S"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "location",
            "KeySchema": [
              {
                "AttributeName": "location",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "hotelsTable"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable/Resource"
      }
    },
    "hotelsTableCreateServiceRole6DFE7510": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Create/ServiceRole/Resource"
      }
    },
    "hotelsTableCreateServiceRoleDefaultPolicy1F9383F3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "hotelsTableAEA1B8E6",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "hotelsTableAEA1B8E6",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "hotelsTableCreateServiceRoleDefaultPolicy1F9383F3",
        "Roles": [
          {
            "Ref": "hotelsTableCreateServiceRole6DFE7510"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Create/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "hotelsTableCreate1DB71F4A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "c1d428e706c80218f27822270855459c9bbb222e9f6204ccd0ca67beab5b36a1.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "hotelsTableCreateServiceRole6DFE7510",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": "hotelsTable",
            "PRIMARY_KEY": "hotelId",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "hotelsTable-Create",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "hotelsTableCreateServiceRoleDefaultPolicy1F9383F3",
        "hotelsTableCreateServiceRole6DFE7510"
      ],
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Create/Resource",
        "aws:asset:path": "asset.c1d428e706c80218f27822270855459c9bbb222e9f6204ccd0ca67beab5b36a1",
        "aws:asset:property": "Code"
      }
    },
    "hotelsTableReadServiceRoleD693AD8F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Read/ServiceRole/Resource"
      }
    },
    "hotelsTableReadServiceRoleDefaultPolicyB40A4AE7": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "hotelsTableAEA1B8E6",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "hotelsTableAEA1B8E6",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "hotelsTableReadServiceRoleDefaultPolicyB40A4AE7",
        "Roles": [
          {
            "Ref": "hotelsTableReadServiceRoleD693AD8F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Read/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "hotelsTableRead4582DF29": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "2be2bdbd9601d04907a8d96d9ced76d268fa664033058c16a084c6281cfb53e0.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "hotelsTableReadServiceRoleD693AD8F",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": "hotelsTable",
            "PRIMARY_KEY": "hotelId",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "hotelsTable-Read",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "hotelsTableReadServiceRoleDefaultPolicyB40A4AE7",
        "hotelsTableReadServiceRoleD693AD8F"
      ],
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Read/Resource",
        "aws:asset:path": "asset.2be2bdbd9601d04907a8d96d9ced76d268fa664033058c16a084c6281cfb53e0",
        "aws:asset:property": "Code"
      }
    },
    "hotelsTableUpdateServiceRole05C5F0E3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Update/ServiceRole/Resource"
      }
    },
    "hotelsTableUpdateServiceRoleDefaultPolicyE662863F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "hotelsTableAEA1B8E6",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "hotelsTableAEA1B8E6",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "hotelsTableUpdateServiceRoleDefaultPolicyE662863F",
        "Roles": [
          {
            "Ref": "hotelsTableUpdateServiceRole05C5F0E3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Update/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "hotelsTableUpdate422043EF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "93be0bdfec9948d244df5c66f6596600b9eed431acbad8d4d3d55d376bd11c4d.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "hotelsTableUpdateServiceRole05C5F0E3",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": "hotelsTable",
            "PRIMARY_KEY": "hotelId",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "hotelsTable-Update",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "hotelsTableUpdateServiceRoleDefaultPolicyE662863F",
        "hotelsTableUpdateServiceRole05C5F0E3"
      ],
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Update/Resource",
        "aws:asset:path": "asset.93be0bdfec9948d244df5c66f6596600b9eed431acbad8d4d3d55d376bd11c4d",
        "aws:asset:property": "Code"
      }
    },
    "hotelsTableDeleteServiceRole03EDC9F0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Delete/ServiceRole/Resource"
      }
    },
    "hotelsTableDeleteServiceRoleDefaultPolicyBB6771D9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "hotelsTableAEA1B8E6",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "hotelsTableAEA1B8E6",
                          "Arn"
                        ]
                      },
                      "/index/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "hotelsTableDeleteServiceRoleDefaultPolicyBB6771D9",
        "Roles": [
          {
            "Ref": "hotelsTableDeleteServiceRole03EDC9F0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Delete/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "hotelsTableDeleteF55A7AC8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "712d0dd03efcf9657d0bf177af5f69736b3768c44f74f09b8a471bc7be1c0ccd.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "hotelsTableDeleteServiceRole03EDC9F0",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": "hotelsTable",
            "PRIMARY_KEY": "hotelId",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "hotelsTable-Delete",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "hotelsTableDeleteServiceRoleDefaultPolicyBB6771D9",
        "hotelsTableDeleteServiceRole03EDC9F0"
      ],
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/hotelsTable-Delete/Resource",
        "aws:asset:path": "asset.712d0dd03efcf9657d0bf177af5f69736b3768c44f74f09b8a471bc7be1c0ccd",
        "aws:asset:property": "Code"
      }
    },
    "HotelUserPoolD1933616": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1
            },
            {
              "Name": "verified_email",
              "Priority": 2
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false
        },
        "AliasAttributes": [
          "email"
        ],
        "AutoVerifiedAttributes": [
          "email"
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolName": "HotelUserPool",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelUserPool/Resource"
      }
    },
    "HotelUserPoolHotelUserPoolclientB943A560": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Ref": "HotelUserPoolD1933616"
        },
        "AllowedOAuthFlows": [
          "implicit",
          "code"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin"
        ],
        "CallbackURLs": [
          "https://example.com"
        ],
        "ClientName": "HotelUserPool-client",
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_CUSTOM_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "GenerateSecret": false,
        "SupportedIdentityProviders": [
          "COGNITO"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelUserPool/HotelUserPool-client/Resource"
      }
    },
    "UserAuthorizerF623B8DE": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "RestApiId": {
          "Ref": "HotelApi7FAF7AD2"
        },
        "Type": "COGNITO_USER_POOLS",
        "IdentitySource": "method.request.header.Authorization",
        "Name": "HotelUserAuthorizer",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "HotelUserPoolD1933616",
              "Arn"
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/UserAuthorizer/Resource"
      }
    },
    "HotelFinderIdentityPool": {
      "Type": "AWS::Cognito::IdentityPool",
      "Properties": {
        "AllowUnauthenticatedIdentities": true,
        "CognitoIdentityProviders": [
          {
            "ClientId": {
              "Ref": "HotelUserPoolHotelUserPoolclientB943A560"
            },
            "ProviderName": {
              "Fn::GetAtt": [
                "HotelUserPoolD1933616",
                "ProviderName"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/HotelFinderIdentityPool"
      }
    },
    "CognitoDefaultAuthenticatedRoleC5D5C31E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "HotelFinderIdentityPool"
                  }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/CognitoDefaultAuthenticatedRole/Resource"
      }
    },
    "CognitoDefaultUnAuthenticatedRole6CA311FD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "HotelFinderIdentityPool"
                  }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/CognitoDefaultUnAuthenticatedRole/Resource"
      }
    },
    "CognitoAdminRole4C10FBA4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "HotelFinderIdentityPool"
                  }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/CognitoAdminRole/Resource"
      }
    },
    "CognitoAdminRoleDefaultPolicyBC6192E4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:ListAllMyBuckets",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CognitoAdminRoleDefaultPolicyBC6192E4",
        "Roles": [
          {
            "Ref": "CognitoAdminRole4C10FBA4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/CognitoAdminRole/DefaultPolicy/Resource"
      }
    },
    "RolesAttachment": {
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
      "Properties": {
        "IdentityPoolId": {
          "Ref": "HotelFinderIdentityPool"
        },
        "RoleMappings": {
          "adminsMapping": {
            "AmbiguousRoleResolution": "AuthenticatedRole",
            "IdentityProvider": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::GetAtt": [
                      "HotelUserPoolD1933616",
                      "ProviderName"
                    ]
                  },
                  ":",
                  {
                    "Ref": "HotelUserPoolHotelUserPoolclientB943A560"
                  }
                ]
              ]
            },
            "Type": "Token"
          }
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "CognitoDefaultAuthenticatedRoleC5D5C31E",
              "Arn"
            ]
          },
          "unauthenticated": {
            "Fn::GetAtt": [
              "CognitoDefaultUnAuthenticatedRole6CA311FD",
              "Arn"
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/RolesAttachment"
      }
    },
    "admins": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "UserPoolId": {
          "Ref": "HotelUserPoolD1933616"
        },
        "GroupName": "admins",
        "RoleArn": {
          "Fn::GetAtt": [
            "CognitoAdminRole4C10FBA4",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/admins"
      }
    },
    "helloLambdaNodeJsServiceRole17C143C3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/helloLambdaNodeJs/ServiceRole/Resource"
      }
    },
    "helloLambdaNodeJsServiceRoleDefaultPolicy14D90D8C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:ListAllMyBuckets",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "helloLambdaNodeJsServiceRoleDefaultPolicy14D90D8C",
        "Roles": [
          {
            "Ref": "helloLambdaNodeJsServiceRole17C143C3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/helloLambdaNodeJs/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "helloLambdaNodeJs14E63891": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "d30ff5c10f5d8cb5325914fd0e582b051f0c79473767c1bf3a0b48f201ee622c.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "helloLambdaNodeJsServiceRole17C143C3",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "helloLambdaNodeJsServiceRoleDefaultPolicy14D90D8C",
        "helloLambdaNodeJsServiceRole17C143C3"
      ],
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/helloLambdaNodeJs/Resource",
        "aws:asset:path": "asset.d30ff5c10f5d8cb5325914fd0e582b051f0c79473767c1bf3a0b48f201ee622c",
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/2WRzU7DMBCEn6V3x7QFwTktAnEAqgLnyrFNuq3tjfxDFaK8O3bctAVO+83Iu/LszumUTgvL6Xw2YQdXcLEvFFS0e/OM70m0Nh1roGZeHlhLu7V0vmyALD/NBZacYzCe3MtGYatlxOheqDitlsnLEFsxWC4XzJ3FcWbmZ+m3KJI1EtYGPH44aVeIypUh2ha+pR0+cFI9AabjP1HlgamuUAFvk8zUE8V0JRjtkiWtBucATXrwEAz3kXsiWsM0iriKd1blYQOMzRuDQu4cfRnK2Efc9YY5J72jZSpR00Xge+mHrDynoN2YI4098QhLBccV/neeRATw7dh8qVPY0sfDbfWf/keLoen7ZL0G3wR/3vrwzXQWMPWvE0ReohGQ15HS0p27+prd0NkdvZ3sHEBh49VBS7rO9Qd2MaT/TgIAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "Hotel-Booking/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "HotelApiEndpointCCD25F7C": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HotelApi7FAF7AD2"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "HotelApiDeploymentStageprodCE44C8C1"
            },
            "/"
          ]
        ]
      }
    },
    "UserPoolId": {
      "Value": {
        "Ref": "HotelUserPoolD1933616"
      }
    },
    "UserPoolClientId": {
      "Value": {
        "Ref": "HotelUserPoolHotelUserPoolclientB943A560"
      }
    },
    "IdentityPoolId": {
      "Value": {
        "Ref": "HotelFinderIdentityPool"
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}