{"version":3,"sources":["services/config.ts","services/AuthService.ts","utils/history.ts","components/Login.tsx","components/Navbar.tsx","components/Home.tsx","components/Profile.tsx","assets/default.jpg","components/hotels/HotelComponent.tsx","components/hotels/ConfirmModalComponent.tsx","components/hotels/hotels.tsx","services/DataService.ts","utils/Utils.ts","components/hotels/CreateHotel.tsx","components/App.tsx","index.tsx"],"names":["hotelsUrl","config","REGION","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","HOTELS_PHOTOS_BUCKET","api","baseUrl","Amplify","configure","Auth","mandatorySignIn","region","userPoolId","userPoolWebClientId","identityPoolId","authenticationFlowType","AuthService","userName","password","signIn","user","congnitoUser","getUsername","undefined","cognitoIdentityPool","AWS","credentials","IdentityPoolId","Logins","getSignInUserSession","getIdToken","getJwtToken","this","refreshCredentials","Promise","resolve","reject","refresh","err","result","userAttributes","attributes","push","createBrowserHistory","Login","state","loginAttempted","loginSuccessfull","event","setState","target","value","preventDefault","props","authService","login","setUser","history","loginMessage","className","onSubmit","e","handleSubmit","onChange","setUsername","setPassword","type","React","Component","Navbar","loginLogOut","to","style","float","Home","Profile","a","getUserAttributes","userAtrs","rows","userAttribute","Name","Value","profileBooker","renderUserAttributes","HotelComponent","photoURL","src","alt","genericImage","renderImage","name","hotelId","location","onClick","reserveHotel","ConfromModalComponent","show","content","close","Hotels","hotels","showModal","modalContent","bind","closeModal","dataService","getHotels","reserveHotels","reservationResult","hotel","renderHotels","update","appConfig","DataService","iCreateHotel","photo","uploadPublicFile","photoUrl","requestUrl","requestOptions","method","body","JSON","stringify","fetch","json","resultJSON","id","file","bucket","fileName","Math","random","toString","slice","S3","upload","Bucket","Key","Body","ACL","promise","uploadResult","Location","requestResult","responseJSON","CreateHotel","description","files","stateClone","createHotel","alert","photoHotel","localPhotoURL","URL","createObjectURL","setName","setLocation","setDescription","setPhotoUrl","App","getAWSTemporaryCreds","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54e01122.chunk.js","sourcesContent":["\r\nconst hotelsUrl='https://cy3zoyyuyd.execute-api.us-east-1.amazonaws.com/prod/'\r\n\r\nexport const config = {\r\n    REGION: 'us-east-1',\r\n    USER_POOL_ID: 'us-east-1_Bv9WLY26g',\r\n    APP_CLIENT_ID: '3762gu0me9dcir4k5bb6q7d0in',\r\n    IDENTITY_POOL_ID: 'us-east-1:485e4406-875b-48d2-93df-7660c915caae',\r\n    HOTELS_PHOTOS_BUCKET: 'hotels-photos-0acb0d48ddc3',\r\n    api : {\r\n        baseUrl: hotelsUrl,\r\n        hotelsUrl: `${hotelsUrl}hotels`\r\n    }\r\n} ","import { User, UserAttribute } from '../model/model';\r\nimport { Auth } from 'aws-amplify';\r\nimport Amplify from 'aws-amplify';\r\nimport { config } from './config';\r\nimport { CognitoUser } from '@aws-amplify/auth';\r\nimport * as AWS from 'aws-sdk';\r\nimport { Credentials } from 'aws-sdk/lib/credentials';\r\n\r\nAmplify.configure({\r\n    Auth: {\r\n        mandatorySignIn: false,\r\n        region: config.REGION,\r\n        userPoolId: config.USER_POOL_ID,\r\n        userPoolWebClientId: config.APP_CLIENT_ID,\r\n        identityPoolId: config.IDENTITY_POOL_ID,\r\n        authenticationFlowType: 'USER_PASSWORD_AUTH'\r\n    }\r\n})\r\n\r\n\r\nexport class AuthService {\r\n\r\n    public async login(userName: string, password: string) : Promise < User | undefined >{\r\n    try {\r\n        const user = await Auth.signIn(userName, password) as CognitoUser;\r\n        return {\r\n            congnitoUser: user,\r\n            userName : user.getUsername()\r\n        };\r\n    } catch (error) {\r\n        return undefined\r\n    }\r\n    \r\n    }\r\n\r\n    public async getAWSTemporaryCreds(user: CognitoUser){\r\n        const cognitoIdentityPool = `cognito-idp.${config.REGION}.amazonaws.com/${config.USER_POOL_ID}`; \r\n        AWS.config.credentials = new AWS.CognitoIdentityCredentials({\r\n            IdentityPoolId: config.IDENTITY_POOL_ID,\r\n            Logins: {\r\n                [cognitoIdentityPool]: user.getSignInUserSession()!.getIdToken().getJwtToken()\r\n            }\r\n        }, {\r\n            region: config.REGION\r\n        });\r\n        await this.refreshCredentials();\r\n    }\r\n\r\n\r\n    private async refreshCredentials(): Promise<void>{\r\n        return new Promise((resolve, reject)=>{\r\n            (AWS.config.credentials as Credentials).refresh(err =>{\r\n                if (err) {\r\n                    reject(err)\r\n                } else {\r\n                    resolve()\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    public async getUserAttributes(user: User):Promise<UserAttribute[]>{\r\n        const result: UserAttribute[] = [];\r\n        const attributes = await Auth.userAttributes(user.congnitoUser);\r\n        result.push(...attributes);\r\n        return result          \r\n    }\r\n} ","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory(); ","import React, { SyntheticEvent } from 'react';\r\nimport { User } from '../model/model';\r\nimport { AuthService } from '../services/AuthService';\r\nimport history from '../utils/history';\r\n\r\n//auth\r\ninterface LoginProps {\r\n    authService: AuthService,\r\n    setUser:(user: User) => void\r\n}\r\n\r\n//state\r\ninterface LoginState {\r\n    userName: string,\r\n    password: string,\r\n    loginAttempted : boolean,\r\n    loginSuccessfull: boolean\r\n}\r\n\r\ninterface CustomEvent {\r\n    target: HTMLInputElement\r\n}\r\n\r\nexport class Login extends React.Component <LoginProps, LoginState> {\r\n\r\n    state: LoginState = {\r\n        userName: '',\r\n        password: '',\r\n        loginAttempted: false,\r\n        loginSuccessfull: false\r\n    }\r\n\r\n    private setUsername(event : CustomEvent) {\r\n        this.setState({userName: event.target.value})\r\n    }\r\n\r\n    private setPassword(event : CustomEvent) {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    private async handleSubmit (event: SyntheticEvent) {\r\n        event.preventDefault();\r\n        this.setState({loginAttempted: true});\r\n        const result = await this.props.authService.login (\r\n            this.state.userName,\r\n            this.state.password\r\n        )\r\n        if (result) {\r\n            this.setState({loginSuccessfull: true})\r\n            this.props.setUser(result)\r\n            //user will be directed to profile page after login or register\r\n            history.push('/profile')\r\n        } else {\r\n            this.setState({loginSuccessfull: false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let loginMessage : any;\r\n        if (this.state.loginAttempted) {\r\n            if (this.state.loginSuccessfull) {\r\n                loginMessage = <label> Login was a Success!</label>\r\n            } else {\r\n                loginMessage = <label> Login was a Failure!</label>\r\n            }\r\n        }\r\n\r\n        return <div className=\"\">\r\n           <h2>Login Page</h2> \r\n            <form onSubmit={e => this.handleSubmit(e)}>\r\n                <input value={this.state.userName} onChange = { e => this.setUsername(e)} /><br/>\r\n                <input value={this.state.password} onChange = { e => this.setPassword(e)} type='password'/><br/>\r\n                <input type='submit' value='Login'/>\r\n            </form>\r\n            {loginMessage}\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { User } from \"../model/model\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport class Navbar extends React.Component<{\r\n    user: User | undefined\r\n}> {\r\n\r\n    render(){\r\n        let loginLogOut: any\r\n        if (this.props.user) {\r\n            loginLogOut = <Link to='/logout' style={{float:'right'}} >{this.props.user.userName}</Link>\r\n        } else {\r\n            loginLogOut = <Link to='/login'  style={{float:'right'}}>Login</Link>\r\n        }\r\n\r\n\r\n        return(\r\n            <div className='navbar'>\r\n                <Link to='/'> Home </Link>\r\n                <Link to='/profile'>Profile</Link>\r\n                <Link to='/hotels'>Hotels</Link>\r\n                {loginLogOut}\r\n            </div>\r\n        )\r\n    }\r\n} ","import React from \"react\";\r\n\r\nexport class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Welcome to the Homepage Page!!\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { User, UserAttribute } from \"../model/model\";\r\nimport { AuthService } from \"../services/AuthService\";\r\n\r\ninterface ProfileState {\r\n    userAttributes: UserAttribute[]\r\n}\r\ninterface ProfileProps {\r\n    user: User | undefined\r\n    authService: AuthService\r\n}\r\nexport class Profile extends React.Component<ProfileProps, ProfileState> {\r\n\r\n    state: ProfileState = {\r\n        userAttributes: []\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if (this.props.user) {\r\n            const userAtrs = await this.props.authService.getUserAttributes(this.props.user);\r\n            this.setState({\r\n                userAttributes: userAtrs\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    private renderUserAttributes(){\r\n        const rows = []\r\n        for (const userAttribute of this.state.userAttributes) {\r\n            rows.push(<tr key={userAttribute.Name}>\r\n                <td>{userAttribute.Name}</td>\r\n                <td>{userAttribute.Value}</td>\r\n            </tr>)\r\n\r\n        }\r\n        return <table>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </table>\r\n    }\r\n\r\n    render() {\r\n            let profileBooker \r\n            if (this.props.user) {\r\n                profileBooker = <div>\r\n                <h3>Hello {this.props.user.userName}</h3>\r\n                Here are your attributes:\r\n                {this.renderUserAttributes()}\r\n                </div>\r\n        } else {\r\n            profileBooker = <div>\r\n            Please <Link to='login'>Login</Link>\r\n            </div>\r\n        }\r\n        return(\r\n            <div>\r\n                Welcome ti the profile page!\r\n                {profileBooker}\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/default.a3f5c684.jpg\";","import { Component } from \"react\";\r\nimport genericImage from '../../assets/default.jpg';\r\nimport './HotelComponent.css';\r\n\r\ninterface HotelComponentProps {\r\n    hotelId: string,\r\n    name: string,\r\n    location: string,\r\n    photoURL?: string,\r\n    reserveHotel: (hotelId: string) => void\r\n}\r\n\r\nexport class HotelComponent extends Component<HotelComponentProps> {\r\n\r\n    private renderImage(){\r\n        if (this.props.photoURL) {\r\n            return <img src={this.props.photoURL} alt=''/>\r\n        } else {\r\n            return <img src={genericImage} alt=''/>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return <div className=\"hotelComponent\">\r\n            {this.renderImage()}\r\n            <label className=\"name\">{this.props.name}</label><br/>\r\n            <label className=\"hotelId\">{this.props.hotelId}</label><br/>\r\n            <label className=\"location\">{this.props.location}</label><br/>\r\n            <button onClick={()=>this.props.reserveHotel(this.props.hotelId)}>Reserve</button>\r\n        </div>\r\n    }\r\n\r\n} ","import { Component } from \"react\";\r\nimport './ConfromModalComponentProps.css';\r\n\r\ninterface ConfromModalComponentProps {\r\n    show: boolean,\r\n    content: string,\r\n    close: () => void\r\n}\r\n\r\nexport class ConfromModalComponent extends Component<ConfromModalComponentProps> {\r\n\r\n    render() {\r\n        if (!this.props.show) {\r\n            return null\r\n        } else {\r\n            return <div className='modal'>\r\n                <div className='modal-content'>\r\n                    <h2>You tried to resrve and ...</h2>\r\n                    <h3 className='modalText'>{this.props.content}</h3>\r\n                    <button  onClick={()=> this.props.close()} >Ok, close</button>\r\n                </div>\r\n            </div>\r\n        }\r\n    }\r\n\r\n} ","import { Component } from 'react';\r\nimport { Hotel } from '../../model/model';\r\nimport { DataService } from '../../services/DataService';\r\nimport { HotelComponent } from './HotelComponent';\r\nimport { ConfromModalComponent } from './ConfirmModalComponent';\r\nimport { Link } from \"react-router-dom\";\r\ninterface HotelsState {\r\n    hotels: Hotel[],\r\n    showModal: boolean,\r\n    modalContent: string\r\n}\r\n\r\ninterface HotelsProps {\r\n    dataService: DataService,\r\n}\r\n\r\nexport class Hotels extends Component<HotelsProps, HotelsState> {\r\n\r\n    constructor(props: HotelsProps) {\r\n        super(props)\r\n        this.state = {\r\n            hotels: [],\r\n            showModal: false,\r\n            modalContent: ''\r\n\r\n        }\r\n        this.reserveHotel = this.reserveHotel.bind(this);\r\n        this.closeModal = this.closeModal.bind(this)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const hotels = await this.props.dataService.getHotels();\r\n        this.setState({\r\n            hotels: hotels\r\n        });\r\n    }\r\n\r\n    private async reserveHotel(hotelId: string) {\r\n        const reservationResult = await this.props.dataService.reserveHotels(hotelId)\r\n        if (reservationResult) {\r\n            this.setState({\r\n                showModal: true,\r\n                modalContent: `You reserved the hotel with id ${hotelId} and got the reservation number ${reservationResult}`\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showModal: true,\r\n                modalContent: `You can't reserve the hotel with id ${hotelId}`\r\n            })\r\n        }\r\n    }\r\n\r\n    private renderHotels() {\r\n        const rows: any[] = []\r\n        for (const hotel of this.state.hotels) {\r\n            rows.push(\r\n                <HotelComponent\r\n                    location={hotel.location}\r\n                    name={hotel.name}\r\n                    photoURL={hotel.photoURL}\r\n                    hotelId={hotel.hotelId}\r\n                    reserveHotel={this.reserveHotel}\r\n                />\r\n            )\r\n        }\r\n\r\n        return rows;\r\n    }\r\n\r\n    private closeModal() {\r\n        this.setState({\r\n            showModal: false,\r\n            modalContent: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Welcome to the Hotels page!</h2>\r\n                <Link to='/createHotel'>Create Hotel</Link><br></br>\r\n                {this.renderHotels()}\r\n                <ConfromModalComponent\r\n                    close={this.closeModal}\r\n                    content={this.state.modalContent}\r\n                    show={this.state.showModal} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n} ","import { ICreateHotelState } from \"../components/hotels/CreateHotel\";\r\nimport { Hotel } from \"../model/model\";\r\nimport { S3, config } from 'aws-sdk';\r\nimport { config as appConfig} from './config'\r\nimport { generateRandomId } from '../utils/Utils';\r\n\r\nconfig.update({\r\n    region: appConfig.REGION\r\n})\r\nexport class DataService {\r\n    public async createHotel(iCreateHotel: ICreateHotelState){\r\n        if (iCreateHotel.photo) {\r\n            const photoUrl = await this.uploadPublicFile(\r\n                iCreateHotel.photo,\r\n                appConfig.HOTELS_PHOTOS_BUCKET\r\n            )\r\n            iCreateHotel.photoURL = photoUrl;\r\n            iCreateHotel.photo = undefined\r\n        }\r\n        const requestUrl = appConfig.api.hotelsUrl;\r\n        const requestOptions: RequestInit = {\r\n            method: 'POST',\r\n            body: JSON.stringify(iCreateHotel)\r\n        }\r\n        const result = await fetch(requestUrl, requestOptions);\r\n        const resultJSON = await result.json();\r\n\r\n        return JSON.stringify(resultJSON.id);\r\n    }\r\n\r\n    private async uploadPublicFile(file: File, bucket: string){\r\n        const fileName = generateRandomId() +  file.name;\r\n        const uploadResult = await new S3({region: appConfig.REGION}).upload({\r\n            Bucket: bucket,\r\n            Key: fileName,\r\n            Body: file,\r\n            ACL: 'public-read'\r\n        }).promise();\r\n        return uploadResult.Location\r\n    }\r\n\r\n    public async getHotels(): Promise<Hotel[]> {\r\n        const requestUrl = appConfig.api.hotelsUrl;\r\n        const requestResult = await fetch(\r\n            requestUrl, {\r\n                method: 'GET'\r\n            }\r\n        );\r\n        const responseJSON = await requestResult.json();\r\n        return responseJSON;\r\n    }\r\n\r\npublic async reserveHotels(hotelId: string):Promise<string | undefined> {\r\n    if (hotelId === '123') {\r\n        return('5555')\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n}\r\n\r\n","\r\nexport function generateRandomId(): string{\r\n    return Math.random().toString(36).slice(2);\r\n}","import { Component, SyntheticEvent } from \"react\";\r\nimport { DataService } from \"../../services/DataService\";\r\n\r\ninterface CustomEvent {\r\n    target: HTMLInputElement\r\n}\r\nexport interface ICreateHotelState {\r\n    name?: string,\r\n    location?: string,\r\n    description?: string,\r\n    photoURL?: string,\r\n    photo?: File\r\n}\r\ninterface ICreateHotelProps {\r\n    dataService: DataService\r\n}\r\n\r\nexport class CreateHotel extends Component<ICreateHotelProps, ICreateHotelState> {\r\n\r\n    state: ICreateHotelState = {\r\n        name:'',\r\n        description:'',\r\n        location: '',\r\n        photoURL: ''\r\n    }\r\n\r\n    private setName(event: CustomEvent) {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n    private setLocation(event: CustomEvent) {\r\n        this.setState({ location: event.target.value });\r\n    }\r\n    private setDescription(event: CustomEvent) {\r\n        this.setState({ description: event.target.value });\r\n    }\r\n\r\n    private setPhotoUrl(event: CustomEvent) {\r\n        if (event.target.files && event.target.files[0]) {\r\n            this.setState({ photo: event.target.files[0] });\r\n        }\r\n    }\r\n\r\n    private async handleSubmit(event: SyntheticEvent) {\r\n        event.preventDefault();\r\n        const stateClone = {...this.state};\r\n        try {\r\n            const id = await this.props.dataService.createHotel(stateClone);  \r\n            alert(`Created hotel with id: ${id}`);\r\n        } catch (error) {\r\n            alert(`Error while creating hotel: ${'Failed :D'}`);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n            let photoHotel;\r\n            if (this.state.photo) {\r\n                const localPhotoURL = URL.createObjectURL(this.state.photo)\r\n                photoHotel = <img alt='' src={localPhotoURL} />\r\n            } else {\r\n                photoHotel = <div></div>\r\n            }\r\n            return <form onSubmit={e => this.handleSubmit(e)}>\r\n                <label>Name:<br />\r\n                    <input name='hotel name' value={this.state.name} onChange={e => this.setName(e)} />\r\n                </label><br />\r\n                <label>Location:<br />\r\n                    <input name='hotel location' value={this.state.location} onChange={e => this.setLocation(e)} />\r\n                </label><br />\r\n                <label>Description:<br />\r\n                    <input name='hotel location' value={this.state.description} onChange={e => this.setDescription(e)} />\r\n                </label><br />\r\n                <label>Photo:<br />\r\n                    <input name='photo' type='file' onChange={e => this.setPhotoUrl(e)} />\r\n                </label><br />\r\n                {photoHotel}<br />\r\n                <input data-test=\"submit-button\" type=\"submit\" value=\"Create hpace\" />\r\n            </form>\r\n    }\r\n\r\n}  ","import React from 'react';\r\nimport { User } from '../model/model';\r\nimport { AuthService } from '../services/AuthService';\r\nimport { Login } from './Login';\r\nimport { Router, Route , Switch } from 'react-router-dom';\r\nimport history from '../utils/history';\r\nimport { Navbar } from './Navbar';\r\nimport { Home } from './Home';\r\nimport { Profile } from './Profile';\r\nimport { Hotels } from './hotels/hotels'\r\nimport { DataService } from '../services/DataService';\r\nimport { CreateHotel } from './hotels/CreateHotel';\r\ninterface AppState{\r\n  user: User | undefined\r\n}\r\n\r\nexport class App extends React.Component <{}, AppState>{\r\n\r\n  private authService: AuthService = new AuthService();\r\n  private dataService: DataService = new DataService();\r\n\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      user : undefined\r\n    }\r\n\r\n    this.setUser = this.setUser.bind(this)\r\n  }\r\n\r\n  //user function\r\n  private async setUser(user: User){\r\n    this.setState({\r\n      user: user\r\n    })\r\n    await this.authService.getAWSTemporaryCreds(user.congnitoUser);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='wrapper'>\r\n        <Router history={history}>\r\n          <div>\r\n            <Navbar user={this.state.user}/>\r\n            <Switch>\r\n              <Route exact path='/' component={Home}/>\r\n              <Route exact path='/login'>\r\n                <Login authService={this.authService} setUser={this.setUser}/>\r\n              </Route>\r\n              <Route exact path='/profile'>\r\n                <Profile authService={this.authService} user={this.state.user} />\r\n              </Route>\r\n              <Route exact path='/hotels'>\r\n              <Hotels dataService={this.dataService}/>\r\n                </Route>\r\n                <Route exact path='/createHotel'>\r\n                <CreateHotel dataService={this.dataService}/>\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n\r\n        </Router>        \r\n    </div>\r\n  )\r\n  }\r\n}\r\n\r\n","import ReactDOM from 'react-dom';\r\nimport './index.css'\r\nimport {App} from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}